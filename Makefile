#############################################################################
# Makefile for building: zdsp1d
# Generated by qmake (1.07a) (Qt 3.3.4) on: Tue Jun 18 13:04:49 2013
# Project:  zdsp1d.pro
# Template: app
# Command: $(QMAKE) -o Makefile zdsp1d.pro
#############################################################################

####### Compiler, tools and options

CC       = arm-linux-gcc
CXX      = arm-linux-g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -mcpu=xscale -Wall -W -O2 -g  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -mcpu=xscale -Wall -W -O2 -g  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/mnt/xscale/sources/qt/mkspecs/default -I. -I$(QTDIR)/include -I.ui/ -I.moc/
LINK     = arm-linux-g++
LFLAGS   = -nodefaultlibs -Wl,-rpath-link,/mnt/xscale/sources/xfree86/xc/exports/lib  -Wl,-rpath,$(QTDIR)/lib
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/mnt/xscale/sources/xfree86/xc/exports/lib -lqt-mt -lXext -lX11 -lm
AR       = arm-linux-ar cqs
RANLIB   = 
MOC      = /usr/bin/moc
UIC      = /usr/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/

####### Files

HEADERS = zdspglobal.h \
		parse.h \
		scpi.h \
		zdsp1d.h \
		cmdinterpret.h \
		zhserver.h \
		dsp.h \
		zeraglobal.h \
		dsp1scpi.h
SOURCES = main.cpp \
		parse.cpp \
		cmdinterpret.cpp \
		cmds.cpp \
		zdsp1d.cpp \
		zhserver.cpp \
		dsp.cpp \
		scpi.cpp
OBJECTS = .obj/main.o \
		.obj/parse.o \
		.obj/cmdinterpret.o \
		.obj/cmds.o \
		.obj/zdsp1d.o \
		.obj/zhserver.o \
		.obj/dsp.o \
		.obj/scpi.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = zdsp1d.pro
QMAKE_TARGET = zdsp1d
DESTDIR  = 
TARGET   = zdsp1d

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: zdsp1d.pro  /mnt/xscale/sources/qt/mkspecs/default/qmake.conf /mnt/xscale/sources/qt/lib/libqt-mt.prl
	$(QMAKE) -o Makefile zdsp1d.pro
qmake: 
	@$(QMAKE) -o Makefile zdsp1d.pro

dist: 
	@mkdir -p .obj/zdsp1d && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/zdsp1d/ && ( cd `dirname .obj/zdsp1d` && $(TAR) zdsp1d.tar zdsp1d && $(GZIP) zdsp1d.tar ) && $(MOVE) `dirname .obj/zdsp1d`/zdsp1d.tar.gz . && $(DEL_FILE) -r .obj/zdsp1d

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/main.o: main.cpp zdsp1d.h \
		zdspglobal.h \
		dsp1scpi.h \
		zhserver.h \
		dsp.h \
		scpi.h \
		cmdinterpret.h \
		parse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/main.o main.cpp

.obj/parse.o: parse.cpp parse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/parse.o parse.cpp

.obj/cmdinterpret.o: cmdinterpret.cpp zeraglobal.h \
		dsp1scpi.h \
		scpi.h \
		cmdinterpret.h \
		parse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/cmdinterpret.o cmdinterpret.cpp

.obj/cmds.o: cmds.cpp scpi.h \
		dsp1scpi.h \
		cmdinterpret.h \
		parse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/cmds.o cmds.cpp

.obj/zdsp1d.o: zdsp1d.cpp zeraglobal.h \
		zdspglobal.h \
		zhserver.h \
		zdsp1d.h \
		dsp.h \
		parse.h \
		scpi.h \
		dsp1scpi.h \
		cmdinterpret.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/zdsp1d.o zdsp1d.cpp

.obj/zhserver.o: zhserver.cpp zdspglobal.h \
		zhserver.h \
		dsp1scpi.h \
		scpi.h \
		cmdinterpret.h \
		parse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/zhserver.o zhserver.cpp

.obj/dsp.o: dsp.cpp dsp.h \
		parse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/dsp.o dsp.cpp

.obj/scpi.o: scpi.cpp scpi.h \
		parse.h \
		dsp1scpi.h \
		cmdinterpret.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/scpi.o scpi.cpp

####### Install

install:  

uninstall:  

